package com.ydp.pwgl.wx;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;

import org.dom4j.Document;
import org.dom4j.Element;
import org.dom4j.Node;
import org.dom4j.io.OutputFormat;
import org.dom4j.io.SAXReader;
import org.dom4j.io.XMLWriter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.ydp.util.CodeUtil;

/**
 * 
 * @author Administrator
 * 系统配置
 *
 */
public class Config {
	private static Logger logger = LoggerFactory.getLogger(Config.class);
	
	public static  String confpath = null;
	
	public static  String app_id = "";
	public static  String component_app_id = "";
	public static  String image_prefix = "";
	public static  Integer page_size = 10;
	public static  String local = "";
	public static  String wx_getcode_url = "";
	public static  String wx_gettoken_url = "";
	public static  String wx_getaccess_token_url = "";
	public static  String wx_get_userinfo_url = "";
	public static  String token = "";
	public static  String encodingAesKey = "";
	public static  String component_app_secret = "";
	public static  String component_access_token = null;
	public static  String wx_preauth_url = "";
	public static  String preauth_code = "";
	public static  int cookie_timeout = 10000;//单位毫秒

	public static void LoadConfig() {
		try {
			SAXReader read = new SAXReader();
			Document document = null;
			String path = confpath + "config.xml";
			//document = read.read(path);
			document = read.read(new BufferedReader(new InputStreamReader(new FileInputStream(new File(path)),"UTF-8")));
			
			Node rootNode = document.selectSingleNode("config");
			
			local = rootNode.selectSingleNode("weixin").valueOf("@local");
			component_app_id = rootNode.selectSingleNode("component_app_id").getText();
			component_app_secret = rootNode.selectSingleNode("component_app_secret").getText();
			image_prefix = rootNode.selectSingleNode("Img_prefix").getText();
			page_size = Integer.parseInt(rootNode.selectSingleNode("page_size").getText());
			wx_getcode_url = rootNode.selectSingleNode("wx_getcode_url").getText();
			wx_gettoken_url = rootNode.selectSingleNode("wx_gettoken_url").getText();
			wx_getaccess_token_url = rootNode.selectSingleNode("wx_getaccess_token_url").getText();
			wx_get_userinfo_url = rootNode.selectSingleNode("wx_get_userinfo_url").getText();
			wx_preauth_url = rootNode.selectSingleNode("wx_preauth_url").getText();
			//preauth_code = rootNode.selectSingleNode("preauth_code").getText();
			app_id = rootNode.selectSingleNode("app_id").getText();
			token = rootNode.selectSingleNode("token").getText();
			encodingAesKey =  rootNode.selectSingleNode("encodingAesKey").getText();
			//component_access_token =  rootNode.selectSingleNode("component_access_token").getText();
			cookie_timeout =  Integer.parseInt(rootNode.selectSingleNode("cookie_timeout").getText());
			
			
			logger.info("解析配置文件完毕[{},local:{},component_app_id:{},image_prefix:{},page_size:{}]", path,local,component_app_id,
					image_prefix,page_size);
			
			
		} catch (Exception e) {
			logger.error("LoadCongif() error" + e.getMessage());
		}
	}
	
	public static void SaveConfig(String key,String value) {
		
		if ( CodeUtil.checkParam(confpath) ){
			logger.error("[SaveConfig] confpath 参数为空!");
			return ;			
		}
		
		try {
			SAXReader read = new SAXReader();
			Document document = null;
			String path = confpath + "config.xml";
			document = read.read(new BufferedReader(new InputStreamReader(new FileInputStream(new File(path)),"UTF-8")));
			
			Element root = document.getRootElement();
			
			Node per = root.selectSingleNode(key);
			if (per != null) {
				if (!per.getText().equals(value)){
					logger.info("[SaveConfig] key:{} 旧值:{} 新值:{}!",key,per.getText(),value);
					per.setText(value);
				}
				else
					logger.info("[SaveConfig] key:{} 与原来值相同,无须保存!",key);
			} else {

				Element ele = root.addElement(key);
				ele.setText(value);
			}
			
			OutputFormat format = OutputFormat.createPrettyPrint();  
            format.setEncoding(document.getXMLEncoding());
			XMLWriter writer = new XMLWriter(new FileWriter(path), format);  
            writer.write(document);  
            writer.close();
		} catch (Exception e) {
			logger.error("SaveCongif() error" + e.getMessage());
		}
	}
}
